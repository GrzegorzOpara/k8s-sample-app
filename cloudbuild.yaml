steps:
  - name: python
    id: install-dependencies
    entrypoint: pip
    args: ["install", "-r", "requirements.txt", "--user"]

  - name: python
    id: tests
    entrypoint: python
    args: ["-m", "pytest", "--junitxml=${TAG_NAME}_test_log.xml"] 

  - name: 'gcr.io/cloud-builders/docker'
    id: build
    args: ['build', 
            '-t', 
            '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_APP_NAME}:${TAG_NAME}', 
            '-t', 
            '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_APP_NAME}:latest', 
            '.']
  - name: 'gcr.io/cloud-builders/docker'
    id: image-push
    args:
    - 'push'
    - '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_APP_NAME}:latest' 

artifacts:
  objects:
    location: gs://${_BUCKET_NAME}/
    paths:
      - ${TAG_NAME}_test_log.xml
mages:
  - '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_APP_NAME}:${TAG_NAME}'
  - '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_APP_NAME}:latest'